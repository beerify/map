{"version":3,"sources":["constants/locations.js","assets/data.js","constants/centmap.js","components/provpick.js","constants/Colors.js","components/TabBarIcon.js","components/StyledText.js","screens/HomeStyle.js","screens/HomeScreen.js","navigation/BottomTabNavigator.js","navigation/LinkingConfiguration.js","App.js","hooks/useCachedResources.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf","components/WebMap.js","assets/images/beer-127.png","components/MobileMap.js","components/MobileMapStyle.js","constants/icon.js","constants/provinces.js"],"names":["iah","lat","lng","AB","require","BC","MB","NB","NL","NS","NT","NU","ON","PE","PQ","SK","YT","ProvPick","callback","useState","selected","setSelected","web","Platform","OS","handleSelected","val","centmap","View","style","styles","pickerWrapper","Picker","placeholder","selectedValue","pickerContent","onValueChange","i","Object","keys","provinces","map","p","Item","label","value","key","picker","TabBarIcon","focused","name","Ionicons","size","marginBottom","color","Colors","MonoText","props","Text","fontFamily","StyleSheet","create","container","flex","backgroundColor","developmentModeText","fontSize","lineHeight","textAlign","contentContainer","paddingTop","welcomeContainer","alignItems","marginTop","welcomeImage","width","height","resizeMode","marginLeft","getStartedContainer","marginHorizontal","homeScreenFilename","codeHighlightText","codeHighlightContainer","borderRadius","paddingHorizontal","getStartedText","tabBarInfoContainer","position","bottom","left","right","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText","HomeScreen","contentContainerStyle","onPress","Linking","openURL","FontAwesome","navigationOptions","header","default","Map","BottomTab","createBottomTabNavigator","BottomTabNavigator","navigation","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","title","tabBarIcon","state","routes","index","prefixes","config","Root","path","screens","Home","Links","Stack","createStackNavigator","App","React","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","font","console","warn","useCachedResources","StatusBar","barStyle","NavigationContainer","linking","LinkingConfiguration","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","module","exports","getAvatar","icons","icon","point","locations","Dimensions","get","gmap","GoogleApiWrapper","apiKey","cent","setCent","setProv","data","setData","openInfo","setOpenInfo","active","setActive","infoBrewery","setInfoBrewery","useEffect","provData","handleInfoClose","handleMapClose","id","prov","google","zoom","center","initialCenter","onClick","visible","marker","onClose","o","Brewery","brewery","e","handleClick","Lat","Lng","url","anchor","maps","Point","scaledSize","Size","MobileMap","latitude","longitude","minZoomLevel","maxZoomLevel","loadingEnabled","zoomTapEnabled","zoomControlEnabled","zoomEnabled","scrollEnabled","toolbarEnabled","provider","PROVIDER_GOOGLE","mapStyle","region","latitudeDelta","longitudeDelta","parseFloat","description","coordinate","image","log","justifyContent","optionIconContainer","marginRight","option","borderWidth","hairlineWidth","borderBottomWidth","borderColor","lastOption","optionText","alignSelf","paddingLeft","generic","Twitter","length","avatar"],"mappings":"sFAAe,KACbA,IAAK,CACHC,IAAK,WACLC,KAAM,c,iCCHK,KACbC,GAAIC,EAAQ,KACZC,GAAID,EAAQ,KACZE,GAAIF,EAAQ,KACZG,GAAIH,EAAQ,KACZI,GAAIJ,EAAQ,KACZK,GAAIL,EAAQ,KACZM,GAAIN,EAAQ,KACZO,GAAIP,EAAQ,KACZQ,GAAIR,EAAQ,KACZS,GAAIT,EAAQ,KACZU,GAAIV,EAAQ,KACZW,GAAIX,EAAQ,KACZY,GAAIZ,EAAQ,O,sICZC,GACbD,GAAI,CAAC,WAAY,YACjBE,GAAI,CAAC,OAAQ,WACbC,GAAI,CAAC,UAAW,WAChBC,GAAI,CAAC,UAAW,UAChBC,GAAI,CAAC,OAAQ,UACbC,GAAI,CAAC,OAAQ,MACbC,GAAI,CAAC,OAAQ,QACbC,GAAI,CAAC,YAAa,YAClBC,GAAI,CAAC,WAAY,WACjBC,GAAI,CAAC,WAAY,WACjBC,GAAI,CAAC,MAAO,WACZC,GAAI,CAAC,OAAQ,YACbC,GAAI,CAAC,UAAW,S,QCPH,SAASC,EAAT,GAA+B,IAAZC,EAAW,EAAXA,SAAW,EAKXC,mBAAS,MALE,WAKpCC,EALoC,KAK1BC,EAL0B,KAMrCC,EAAsB,QAAhBC,IAASC,GAEfC,EAAiB,SAACC,GACtBL,EAAYK,GADkB,UAEXC,EAAQD,GAFG,GAEvBzB,EAFuB,KAElBC,EAFkB,KAG9BgB,EAASQ,EAAK,CAACzB,MAAKC,SAGtB,OAAIoB,EAEA,kBAACM,EAAA,EAAD,CAAMC,MAAOC,IAAOC,eAClB,kBAACC,EAAA,EAAD,CACEC,YAAY,kBACZC,cAAed,EACfS,MAAOC,IAAOK,cACdC,cAAe,SAACV,EAAKW,GAAN,OAAYZ,EAAeC,KAEzCY,OAAOC,KAAKC,KAAWC,KAAI,SAAAC,GAC1B,OACE,kBAACV,EAAA,EAAOW,KAAR,CACEC,MAAOJ,IAAUE,GACjBG,MAAOH,EACPI,IAAKJ,SAUjB,kBAACV,EAAA,EAAD,CACEC,YAAY,kBACZC,cAAed,EACfS,MAAOC,IAAOiB,OACdX,cAAe,SAACV,EAAKW,GAAN,OAAYZ,EAAeC,KAEzCY,OAAOC,KAAKC,KAAWC,KAAI,SAAAC,GAC1B,OACE,kBAACV,EAAA,EAAOW,KAAR,CACEC,MAAOJ,IAAUE,GACjBG,MAAOH,EACPI,IAAKJ,U,wxBCtDF,EAEG,OAFH,EAFG,UCIH,SAASM,EAAT,GAAwC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAC5C,OACE,gBAACC,EAAA,EAAD,CACED,KAAMA,EACNE,KAAM,GACNvB,MAAO,CAAEwB,cAAe,GACxBC,MAAOL,EAAUM,EAAyBA,I,+CCPzC,SAASC,EAASC,GAAQ,IACvB5B,EAAU4B,EAAV5B,MACR,OAAO,gBAAC6B,EAAA,EAAD,OAAUD,EAAV,CAAiB5B,MAAO,CAACA,EAAO,CAAE8B,WAAY,kB,ikBCHxCC,UAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,QAEnBC,oBAAqB,CACnBZ,aAAc,GACdC,MAAO,kBACPY,SAAU,GACVC,WAAY,GACZC,UAAW,UAEbC,iBAAkB,CAChBC,WAAY,IAEdC,iBAAkB,CAChBC,WAAY,SACZC,UAAW,GACXpB,aAAc,IAEhBqB,aAAc,CACZC,MAAO,IACPC,OAAQ,GACRC,WAAY,UACZJ,UAAW,EACXK,YAAa,IAEfC,oBAAqB,CACnBP,WAAY,SACZQ,iBAAkB,IAEpBC,mBAAoB,GAGpBC,kBAAmB,CACjB5B,MAAO,yBAET6B,uBAAwB,CACtBnB,gBAAiB,mBACjBoB,aAAc,EACdC,kBAAmB,GAErBC,eAAgB,CACdpB,SAAU,GACVZ,MAAO,sBACPa,WAAY,GACZC,UAAW,SACXK,UAAW,IAEbc,oBAAoB,KAClBC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,GACJpE,IAASqE,OAAO,CACjBC,IAAK,CACHC,YAAa,QACbC,aAAc,CAAEpB,MAAO,EAAGC,QAAS,GACnCoB,cAAe,GACfC,aAAc,GAEhBC,QAAS,CACPC,UAAW,OAbE,IAgBjB3B,WAAY,SACZR,gBAAiB,UACjBoC,gBAAiB,KAEnBC,eAAgB,CACdnC,SAAU,GACVZ,MAAO,sBACPc,UAAW,UAEbkC,mBAAoB,CAClB7B,UAAW,GAEb8B,cAAe,CACb9B,UAAW,GACXD,WAAY,UAEdgC,SAAU,CACRJ,gBAAiB,IAEnBK,aAAc,CACZvC,SAAU,GACVZ,MAAO,a,SCjFI,SAASoD,IAEtB,OACE,gBAAC9E,EAAA,EAAD,CAAMC,MAAOC,EAAOgC,WAClB,gBAAC,IAAD,CAAYjC,MAAOC,EAAOgC,UAAW6C,sBAAuB7E,EAAOuC,kBACjE,gBAACzC,EAAA,EAAD,CAAMC,MAAOC,EAAOiD,qBAElB,gBAACnD,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOqD,uBAAwBrD,EAAOmD,qBAClD,gBAACzB,EAAD,sCAKF,gBAACE,EAAA,EAAD,CAAM7B,MAAOC,EAAOwD,eAAgBsB,QAZ7B,kBAAMC,IAAQC,QAAQ,oCAa3B,gBAACC,EAAA,EAAD,CACI7D,KAAK,SACLE,KAAM,GACNvB,MAAO,CAACyB,MAAO,SAJrB,2BAWJ,gBAAC1B,EAAA,EAAD,CAAMC,MAAOC,EAAOyD,qBAClB,gBAAC7B,EAAA,EAAD,CAAM7B,MAAOC,EAAOuE,iBAIpB,gBAACzE,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOqD,uBAAwBrD,EAAOwE,qBAClD,gBAAC9C,EAAD,CAAU3B,MAAOC,EAAOoD,mBAAxB,gCASVwB,EAAWM,kBAAoB,CAC7BC,OAAQ,MCvCV,IAAM3F,EAAMC,IAASC,KAAOF,EAAMlB,EAAQ,KAAwB8G,QAAU,KAEtEC,EAAM5F,IAASqE,OAAO,CAC1BtE,IAAK,kBAAMA,GACX4F,QAAS,kBAAM9G,EAAQ,KAA2B8G,UAFxC3F,GAKN6F,EAAYC,cAGH,SAASC,EAAT,GAAoD,IAAtBC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,MAKvD,OADAD,EAAWE,WAAW,CAAEC,YAAaC,EAAeH,KAElD,gBAACJ,EAAUQ,UAAX,CAAqBC,iBARE,OAUrB,gBAACT,EAAUU,OAAX,CACE5E,KAAK,MACL6E,UAAWZ,EACXa,QAAS,CACPC,MAAO,MACPC,WAAY,gBAAGjF,EAAH,EAAGA,QAAH,OAAiB,gBAACD,EAAD,CAAYC,QAASA,EAASC,KAAK,eAGpE,gBAACkE,EAAUU,OAAX,CACE5E,KAAK,OACL6E,UAAWrB,EACXsB,QAAS,CACPC,MAAO,OACPC,WAAY,gBAAGjF,EAAH,EAAGA,QAAH,OAAiB,gBAACD,EAAD,CAAYC,QAASA,EAASC,KAAK,yBAO1E,SAASyE,EAAeH,GAAQ,IAAD,MAG7B,OAFe,kBAAGA,EAAMW,QAAT,SAAG,EAAaC,OAAOZ,EAAMW,MAAME,aAAnC,EAAG,EAAwCnF,MAA3C,EA/BU,OAkCvB,IAAK,OACH,MAAO,iBACT,IAAK,MACH,MAAO,WACT,QACE,OAAO,M,ICrDE,GACboF,SAAU,C,OAACzB,EAAgB,MAC3B0B,OAAQ,CACNC,KAAM,CACJC,KAAM,OACNC,QAAS,CACPC,KAAM,OACNC,MAAO,YCDTC,EAAQC,cAERhH,EAAS8B,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,UAIN,SAAS+E,IAGtB,OCda,WAA+B,IAAD,EACKC,YAAe,GADpB,WACpCC,EADoC,KACjBC,EADiB,KA0B3C,OAtBAF,aAAgB,WACd,EAAAG,EAAAC,OAAA,gEAEIC,MAFJ,WAAAF,EAAA,MAKUG,IAAA,OACDnG,IAASoG,MADR,IAEJ,aAAcnJ,EAAQ,SAP5B,sDAWIoJ,QAAQC,KAAR,MAXJ,uBAaIP,GAAmB,GACnBG,MAdJ,mFAmBC,IAEIJ,EDdQS,GAKb,gBAAC9H,EAAA,EAAD,CAAMC,MAAOC,EAAOgC,WACD,QAAhBvC,IAASC,IAAgB,gBAACmI,EAAA,EAAD,CAAWC,SAAS,iBAC9C,gBAACC,EAAA,EAAD,CAAqBC,QAASC,GAC5B,gBAAClB,EAAMjB,UAAP,KACE,gBAACiB,EAAMf,OAAP,CAAc5E,KAAK,OAAO6E,UAAWT,OAPzB,O,+DElBlB,kBAAmB0C,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,8BAA+B,CAAEC,MAAO,UACjDC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfjB,QAAQe,KAAK,oCAAqCE,U,oBCV1DC,EAAOC,QAAU,IAA0B,iC,8JCQnCC,EAA2BC,IAA3BD,UAAWE,EAAgBD,IAAhBC,KAAMC,EAAUF,IAAVE,M,GACTC,IAARhL,IACkBiL,IAAWC,IAAI,WAAjCtG,E,EAAAA,OAAQD,E,EAAAA,MAEV7C,EAAS8B,IAAWC,OAAO,CAC/BC,UAAW,CACTc,OAAiB,GAATA,EACRD,MAAe,GAARA,KAILwG,EAAO,CACX3F,SAAU,WACVb,MAAO,OACPC,OAAQ,QAwFKwG,qCAAiB,CAC9BC,OAAQ,2CADKD,EArFf,SAAgB3H,GACd,GAAoB,QAAhBlC,IAASC,GAAc,OAAO,KADb,MAEGL,mBAAS6J,IAAUhL,KAFtB,WAEdsL,EAFc,KAERC,EAFQ,OAGGpK,mBAAS,MAHZ,WAGRqK,GAHQ,aAIGrK,mBAAS,IAJZ,WAIdsK,EAJc,KAIRC,EAJQ,OAKWvK,oBAAS,GALpB,WAKdwK,EALc,KAKJC,EALI,OAMOzK,mBAAS,MANhB,WAMd0K,EANc,KAMNC,EANM,OAOiB3K,mBAAS,MAP1B,WAOd4K,EAPc,KAODC,EAPC,KAUrBC,qBAAU,WACRP,EAAQQ,IAAQ,MACf,IAEH,IAOMC,EAAkB,WACtBP,GAAY,GACZE,EAAU,MACVE,EAAe,OAWXI,EAAiB,kBAAMT,GAAYQ,KAGzC,OACE,kBAAC,IAAD,CAAME,GAAG,MAAMxK,MAAOC,EAAOgC,WAC3B,kBAAC,IAAD,CAAU5C,SA1BS,SAACoL,EAAMhB,GACvBgB,IACLf,EAAQD,GACRE,EAAQc,GACRZ,EAAQQ,IAASI,QAuBf,kBAAC,IAAD,KACE,kBAAC,MAAD,CACEC,OAAQ9I,EAAM8I,OACd1K,MAAOsJ,EACPqB,KAAM,EACNC,OAAQnB,EACRoB,cAAe1B,IAAUhL,IACzB2M,QAASP,GAET,kBAAC,aAAD,CACEQ,QAASjB,EACTkB,OAAQhB,EACRiB,QAASX,EACTY,GAAC,GAED,mCACGhB,OADH,EACGA,EAAaiB,UAKfvB,EACCA,EAAKhJ,KAAI,SAACwK,EAAS5K,GAAV,OACP,kBAAC,SAAD,CACES,IAAKT,EACL4F,MAAOgF,EAAQD,QACfL,QAAS,SAAClJ,EAAOoJ,EAAQK,GAAhB,OAxCL,SAACzJ,EAAOoJ,EAAQK,EAAGD,GACrCb,IACAN,EAAUe,GACVjB,GAAY,GACZI,EAAeiB,GAoC+BE,CAAY1J,EAAOoJ,EAAQK,EAAGD,IAC9DzH,SAAU,CAACvF,IAAKgN,EAAQG,IAAKlN,IAAK+M,EAAQI,KAC1CvC,KAAM,CACJwC,IAAK1C,EAAUqC,GACfM,OAAQ,IAAIhB,OAAOiB,KAAKC,MAAM1C,EAAOA,GACrC2C,WAAY,IAAInB,OAAOiB,KAAKG,KAAK7C,EAAMA,SAVvC,Y,oBCvFpBJ,EAAOC,QAAU,IAA0B,sC,4rrzBCWnCC,EAA2BC,IAA3BD,UACA5K,GAD2B6K,IAAhBC,KAAgBD,IAAVE,MACTC,IAARhL,KAEO,SAAS4N,IAAa,IAAD,EAIVzM,mBAAS,CAC/B0M,SAAU7N,EAAIC,IACd6N,UAAW9N,EAAIE,MANiB,WAI3BoL,EAJ2B,KAIrBC,EAJqB,OAQVpK,mBAAS,MARC,WAQrBqK,GARqB,aASVrK,mBAAS,IATC,WAS3BsK,EAT2B,KASrBC,EATqB,OAUFvK,oBAAS,GAVP,WAU3BwK,EAV2B,KAUjBC,EAViB,OAWNzK,mBAAS,MAXH,WAWnB2K,GAXmB,aAYI3K,mBAAS,MAZb,WAYd6K,GAZc,WAclCC,qBAAU,WACRP,EAAQQ,IAAQ,MAWf,IAEH,IAwBME,EAAiB,kBAAMT,IAb3BC,GAAY,GACZE,EAAU,WACVE,EAAe,QAYjB,OAAKV,GAASA,EAAKuC,UAAavC,EAAKwC,UAEnC,kBAAC,IAAD,CACEjM,MAAOC,IAAOgC,UACd6C,sBAAuB7E,IAAOuC,kBAC9B,kBAAC,IAAD,CAAUnD,SA9BS,SAACoL,EAAMhB,GAC5B,IAAKgB,EAAM,OAAO,KAClBf,EAAQ,CACNsC,SAAUvC,EAAKrL,IACf6N,UAAWxC,EAAKpL,MAElBsL,EAAQc,GACRZ,EAAQQ,IAASI,OAwBf,kBAAC,IAAD,CACEE,KAAM,EACNuB,aAAc,EACdC,aAAc,GACdpH,QAASwF,EACT6B,gBAAgB,EAChBC,gBAAgB,EAChBC,oBAAoB,EACpBC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,SAAUC,IACV3M,MAAOC,IAAO2M,SACdC,OAAQ,CACNb,SAAUvC,EAAKuC,SACfC,UAAWxC,EAAKwC,UAChBa,cAAe,MACfC,eAAgB,QAIfnD,EACCA,EAAKhJ,KAAI,SAACwK,EAAS5K,GACjB,IAAMpC,EAAM4O,WAAW5B,EAAQG,KACzBlN,EAAM2O,WAAW5B,EAAQI,KAM/B,OACE,kBAAC,IAAD,CACEvK,IAAKT,EACL4F,MAAOgF,EAAQD,QACf8B,YAAa7B,EAAQD,QACrBL,QAAS,SAAClJ,EAAOoJ,EAAQK,GAAhB,OAlDL,SAACzJ,EAAOoJ,EAAQK,EAAGD,GACrCb,IACAN,EAAUe,GACVjB,GAAY,GACZI,EAAeiB,GA8C+BE,CAAY1J,EAAOoJ,EAAQK,EAAGD,IAC9D8B,WAAY,CAAClB,SAAU5N,EAAK6N,UAAW5N,GACvC8O,MAAOpE,EAAUqC,QAhBjB,OA3BuC,O,qDCjE/BhC,IAAWC,IAAI,UAAjCtG,E,EAAAA,OAAQD,E,EAAAA,MAChB6E,QAAQyF,IAAItK,EAAOC,GACJhB,QAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,UACjBQ,WAAY,SACZ0K,eAAgB,SAChBvK,MAAO,OACPC,OAAQ,QAEVP,iBAAkB,CAChBC,WAAY,GAEd6K,oBAAqB,CACnBC,YAAa,IAEfC,OAAQ,CACNrL,gBAAiB,UACjBqB,kBAAmB,GACnBe,gBAAiB,GACjBkJ,YAAa1L,IAAW2L,cACxBC,kBAAmB,EACnBC,YAAa,WAEfC,WAAY,CACVF,kBAAmB5L,IAAW2L,eAEhCI,WAAY,CACVzL,SAAU,GACV0L,UAAW,aACXnL,UAAW,GAEbgK,SAAU,CACR9J,MAAe,IAARA,EACPC,OAAiB,IAATA,GAEV7B,OAAQ,CACNyB,WAAY,SACZ0K,eAAgB,SAChBpK,WAAY,GACZ+K,YAAa,GACbjL,OAAQ,GACRD,MAAO,OAET5C,cAAe,CACb0N,YAAa,UACbH,YAAa,EACbtL,gBAAiB,QACjBoB,aAAc,GAEjBjD,cAAe,CACZmB,MAAO,QACPU,gBAAiB,cACjBQ,WAAY,SACZ0K,eAAgB,SAChBpK,WAAY,GACZ+K,YAAa,GACbjL,OAAQ,GACRD,MAAO,Q,2CC3DLmL,EAAU1P,EAAQ,KACT,KACb,MAAS,GACT,KAAQ,GACRwK,UAAW,YAAgB,IAAdmF,EAAa,EAAbA,QACX,MAAoB,QAAhBxO,IAASC,GAAqBsO,EAC7BC,GAAYA,EAAQC,QACpBD,EAAQ,GAAGE,OACTF,EAAQ,GAAGE,OAFsBH,K,gCCR7B,KACb3P,GAAI,UACJE,GAAI,mBACJC,GAAI,WACJC,GAAI,gBACJC,GAAI,4BACJC,GAAI,cACJC,GAAI,wBACJC,GAAI,UACJC,GAAI,UACJC,GAAI,uBACJC,GAAI,YACJC,GAAI,eACJC,GAAI,W","file":"static/js/app.8b9233c0.chunk.js","sourcesContent":["export default {\n  iah: {\n    lat: 43.6655507,\n    lng: -79.4675274,\n  },\n}","export default {\n  AB: require('../data/AB.json'),\n  BC: require('../data/BC.json'),\n  MB: require('../data/MB.json'),\n  NB: require('../data/NB.json'),\n  NL: require('../data/NL.json'),\n  NS: require('../data/NS.json'),\n  NT: require('../data/NT.json'),\n  NU: require('../data/NU.json'),\n  ON: require('../data/ON.json'),\n  PE: require('../data/PE.json'),\n  PQ: require('../data/PQ.json'),\n  SK: require('../data/SK.json'),\n  YT: require('../data/YT.json'),\n}","// center of map for each province\nexport default {\n  AB: [51.083333, -114.083333],\n  BC: [49.25, -123.13333],\n  MB: [49.88333, -97.166667],\n  NB: [47.36226, -68.32787],\n  NL: [47.55, -52.66666],\n  NS: [44.65, -63.6],\n  NT: [62.45, -114.35],\n  NU: [63.7416279, -68.5537083],\n  ON: [43.666667, -79.416667],\n  PE: [46.238225, -63.139481],\n  PQ: [45.5, -73.583333],\n  SK: [50.45, -104.616667],\n  YT: [60.71666, -135.05],\n}","import React, { useEffect, useState } from 'react'\nimport { Picker, Platform, View } from 'react-native'\nimport provinces from '../constants/provinces'\nimport centmap from '../constants/centmap'\nimport styles from './MobileMapStyle'\n\n// TODO use Context to share the picker state\nexport default function ProvPick({callback}) {\n\n  // we're only doing ontario for now\n  // return null\n\n  const [selected, setSelected] = useState('ON')\n  const web = Platform.OS === 'web'\n\n  const handleSelected = (val) => {\n    setSelected(val)\n    const [lat, lng] = centmap[val]\n    callback(val, {lat, lng})\n  }\n\n  if (web) {\n    return (\n      <View style={styles.pickerWrapper}>\n        <Picker\n          placeholder='Choose Province'\n          selectedValue={selected}\n          style={styles.pickerContent}\n          onValueChange={(val, i) => handleSelected(val)}\n        >\n          {Object.keys(provinces).map(p => {\n            return (\n              <Picker.Item\n                label={provinces[p]}\n                value={p}\n                key={p}\n              />\n            )\n          })}\n        </Picker>\n      </View>\n      )\n  }\n\n  return (\n    <Picker\n      placeholder='Choose Province'\n      selectedValue={selected}\n      style={styles.picker}\n      onValueChange={(val, i) => handleSelected(val)}\n    >\n      {Object.keys(provinces).map(p => {\n        return (\n          <Picker.Item\n            label={provinces[p]}\n            value={p}\n            key={p}\n          />\n        )\n      })}\n    </Picker>\n  )\n}","const tintColor = '#2f95dc'\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n}\n","import { Ionicons } from '@expo/vector-icons'\nimport * as React from 'react'\nimport Colors from '../constants/Colors'\n\nexport default function TabBarIcon({ focused, name }) {\n  return (\n    <Ionicons\n      name={name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  )\n}\n","import * as React from 'react'\nimport { Text } from 'react-native'\n\nexport function MonoText(props) {\n  const { style } = props\n  return <Text {...props} style={[style, { fontFamily: 'space-mono' }]} />\n}\n","import { Platform, StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    // marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 45,\n    textAlign: 'center',\n    marginTop: 25,\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n})\n","import * as React from 'react'\nimport { Linking, Text, View } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { MonoText } from '../components/StyledText'\nimport styles from './HomeStyle'\nimport { FontAwesome } from '@expo/vector-icons'\n\nexport default function HomeScreen() {\n  const ghLink = () => Linking.openURL('https://github.com/beerify/map')\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <View style={styles.getStartedContainer}>\n\n          <View style={[styles.codeHighlightContainer, styles.homeScreenFilename]}>\n            <MonoText>\n              Beer Map Open Source Project\n            </MonoText>\n          </View>\n\n          <Text style={styles.getStartedText} onPress={ghLink}>\n            <FontAwesome\n                name='github'\n                size={30}\n                style={{color: 'red'}} \n            /> Visit GitHub Project\n          </Text>\n        </View>\n\n      </ScrollView>\n\n      <View style={styles.tabBarInfoContainer}>\n        <Text style={styles.tabBarInfoText}>\n\n        </Text>\n\n        <View style={[styles.codeHighlightContainer, styles.navigationFilename]}>\n          <MonoText style={styles.codeHighlightText}>\n            Contributions Are Welcome\n          </MonoText>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n}\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport * as React from 'react'\n\nimport { Platform } from 'react-native'\n\nimport TabBarIcon from '../components/TabBarIcon'\nimport HomeScreen from '../screens/HomeScreen'\n\nconst web = Platform.OS === web ? require('../components/WebMap').default : null\n\nconst Map = Platform.select({\n  web: () => web,\n  default: () => require('../components/MobileMap').default,\n})()\n\nconst BottomTab = createBottomTabNavigator()\nconst INITIAL_ROUTE_NAME = 'Map'\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) })\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n\n      <BottomTab.Screen\n        name='Map'\n        component={Map}\n        options={{\n          title: 'Map',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name='md-map' />,\n        }}\n      />\n      <BottomTab.Screen\n        name='Info'\n        component={HomeScreen}\n        options={{\n          title: 'Info',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name='md-code-working' />,\n        }}\n      />\n    </BottomTab.Navigator>\n  )\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME\n\n  switch (routeName) {\n    case 'Info':\n      return 'About this app'\n    case 'Map':\n      return 'Beer Map'\n    default:\n      return null\n  }\n}\n","import * as Linking from 'expo-linking'\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    Root: {\n      path: 'root',\n      screens: {\n        Home: 'home',\n        Links: 'links',\n      },\n    },\n  },\n}\n","import { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport * as React from 'react'\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native'\nimport useCachedResources from './hooks/useCachedResources'\nimport BottomTabNavigator from './navigation/BottomTabNavigator'\nimport LinkingConfiguration from './navigation/LinkingConfiguration'\n\nconst Stack = createStackNavigator()\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n})\n\nexport default function App() {\n  const loaded = useCachedResources()\n\n  if (!loaded) return null\n\n  return (\n    <View style={styles.container}>\n      {Platform.OS === 'ios' && <StatusBar barStyle=\"dark-content\" />}\n      <NavigationContainer linking={LinkingConfiguration}>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </View>\n  )\n}\n","/* eslint no-console:0 */\nimport { Ionicons } from '@expo/vector-icons'\nimport * as Font from 'expo-font'\nimport * as SplashScreen from 'expo-splash-screen'\nimport * as React from 'react'\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false)\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync()\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        })\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e)\n      } finally {\n        setLoadingComplete(true)\n        SplashScreen.hideAsync()\n      }\n    }\n\n    loadResourcesAndDataAsync()\n  }, [])\n\n  return isLoadingComplete\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/map/expo-service-worker.js', { scope: '/map/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import { InfoWindow, Map, Marker, GoogleApiWrapper } from 'google-maps-react'\nimport React, { useEffect, useState } from 'react'\nimport { Dimensions, Platform, StyleSheet, Text, View } from 'react-native'\nimport ProvPick from './provpick'\nimport icons from '../constants/icon'\nimport locations from '../constants/locations'\nimport provData from '../assets/data'\n\nconst { getAvatar, icon, point } = icons\nconst { iah } = locations\nconst { height, width } = Dimensions.get('window')\n\nconst styles = StyleSheet.create({\n  container: {\n    height: height * 0.9,\n    width: width * 0.9,\n  },\n})\n\nconst gmap = {\n  position: 'relative',  \n  width: '100%',\n  height: '100%'\n}\n\nfunction WebMap(props) {\n  if (Platform.OS !== 'web') return null\n  const [cent, setCent] = useState(locations.iah)\n  const [prov, setProv] = useState('ON')\n  const [data, setData] = useState([])\n  const [openInfo, setOpenInfo] = useState(false)\n  const [active, setActive] = useState(null)\n  const [infoBrewery, setInfoBrewery] = useState(null)\n\n  // set initial state\n  useEffect(() => {\n    setData(provData['ON'])\n  }, [])\n\n  const pickerCallback = (prov, cent) => {\n    if (!prov) return\n    setCent(cent)\n    setProv(prov)\n    setData(provData[prov])\n  }\n\n  const handleInfoClose = () => {\n    setOpenInfo(false)\n    setActive(null)\n    setInfoBrewery(null)\n  }\n\n  const handleClick = (props, marker, e, brewery) => {\n    handleMapClose()\n    setActive(marker)\n    setOpenInfo(true)\n    setInfoBrewery(brewery)\n  }\n\n  // if we click the map while a marker is open it will close but will be unhandled\n  const handleMapClose = () => openInfo && handleInfoClose()\n\n\n  return (\n    <View id='map' style={styles.container}>\n      <ProvPick callback={pickerCallback} />\n      <Text>\n        <Map\n          google={props.google}\n          style={gmap}\n          zoom={7}\n          center={cent}\n          initialCenter={locations.iah}\n          onClick={handleMapClose}\n        >\n          <InfoWindow\n            visible={openInfo}\n            marker={active}\n            onClose={handleInfoClose}\n            o\n          >\n            <div>\n              {infoBrewery?.Brewery}\n            </div>\n            </InfoWindow>\n\n          {\n            !data ? null : (\n              data.map((brewery, i) => (\n                <Marker\n                  key={i}\n                  title={brewery.Brewery}\n                  onClick={(props, marker, e,) => handleClick(props, marker, e, brewery)}\n                  position={{lat: brewery.Lat, lng: brewery.Lng}}\n                  icon={{\n                    url: getAvatar(brewery),\n                    anchor: new google.maps.Point(point, point),\n                    scaledSize: new google.maps.Size(icon, icon)\n                  }}\n                />\n              ))\n            )\n          }\n        </Map>\n      </Text>\n\n    </View>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBX9vQ8Vor-iw4ZZvrTR5STac1f0R9RsiQ'\n})(WebMap)","module.exports = __webpack_public_path__ + \"static/media/beer-127.9e661e6a.png\";","import React, { useEffect, useState } from 'react'\nimport { Dimensions, Picker, Platform, Text, View } from 'react-native'\n// import * as ScreenOrientation from 'expo-screen-orientation';\nimport styles from './MobileMapStyle'\nimport MapView, { CallOut, Marker, PROVIDER_GOOGLE } from 'react-native-maps'\nimport icons from '../constants/icon'\nimport locations from '../constants/locations'\nimport provinces from '../constants/provinces'\nimport ProvPick from './provpick'\nimport provData from '../assets/data'\n\nconst { getAvatar, icon, point } = icons\nconst { iah } = locations\n\nexport default function MobileMap() {\n  // const [w, setW] = useState(Dimensions.get('window').width)\n  // const [h, setH] = useState(Dimensions.get('window').height)\n\n  const [cent, setCent] = useState({\n    latitude: iah.lat,\n    longitude: iah.lng,\n  })\n  const [prov, setProv] = useState('ON')\n  const [data, setData] = useState([])\n  const [openInfo, setOpenInfo] = useState(false)\n  const [active, setActive] = useState(null)\n  const [infoBrewery, setInfoBrewery] = useState(null)\n\n  useEffect(() => {\n    setData(provData['ON'])\n    // setCent({\n    //   latitude: iah.lat,\n    //   longitude: iah.lng,\n    // })\n    // ScreenOrientation.addOrientationChangeListener(() => {\n    //   const { height, width } = Dimensions.get('window')\n    //   setH(height)\n    //   setW(width)\n\n    // })\n  }, [])\n\n  const pickerCallback = (prov, cent) => {\n    if (!prov) return null\n    setCent({\n      latitude: cent.lat,\n      longitude: cent.lng,\n    })\n    setProv(prov)\n    setData(provData[prov])\n  }\n\n  const handleInfoClose = () => {\n    setOpenInfo(false)\n    setActive(null)\n    setInfoBrewery(null)\n  }\n\n  const handleClick = (props, marker, e, brewery) => {\n    handleMapClose()\n    setActive(marker)\n    setOpenInfo(true)\n    setInfoBrewery(brewery)\n  }\n  \n  // if we click the map while a marker is open it will close but will be unhandled\n  const handleMapClose = () => openInfo && handleInfoClose()\n  if (!cent || !cent.latitude || !cent.longitude) return null\n  return (\n    <View\n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}>\n      <ProvPick callback={pickerCallback} />\n      <MapView\n        zoom={9}\n        minZoomLevel={3}\n        maxZoomLevel={26}\n        onPress={handleMapClose}\n        loadingEnabled={true}\n        zoomTapEnabled={true}\n        zoomControlEnabled={true}\n        zoomEnabled={true}\n        scrollEnabled={true}\n        toolbarEnabled={true}\n        provider={PROVIDER_GOOGLE}\n        style={styles.mapStyle}\n        region={{\n          latitude: cent.latitude,\n          longitude: cent.longitude,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421,\n        }}\n      >\n        {\n          !data ? null : (\n            data.map((brewery, i) => {\n              const lat = parseFloat(brewery.Lat)\n              const lng = parseFloat(brewery.Lng)\n              // if (typeof(brewery.Lat) === 'string') {\n              //   console.log('bad region:')\n              //   console.log(brewery)\n              //   return null\n              // }\n              return (\n                <Marker\n                  key={i}\n                  title={brewery.Brewery}\n                  description={brewery.Brewery}\n                  onClick={(props, marker, e,) => handleClick(props, marker, e, brewery)}\n                  coordinate={{latitude: lat, longitude: lng}}\n                  image={getAvatar(brewery)}\n                />\n              )\n            })\n          )\n        }\n        </MapView>\n    </View>\n  )\n}","import { Dimensions, StyleSheet } from 'react-native'\n\nconst { height, width } = Dimensions.get('window')\nconsole.log(width, height)\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n  contentContainer: {\n    paddingTop: 5,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n  mapStyle: {\n    width: width * .86,\n    height: height * 0.76,\n  },\n  picker: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 10,\n    paddingLeft: 10,\n    height: 60,\n    width: '80%',\n  },\n  pickerWrapper: {\n    borderColor: '#fcfcfc',\n    borderWidth: 1,\n    backgroundColor: 'white',\n    borderRadius: 4\n },\n pickerContent: {\n    color: 'black',\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 10,\n    paddingLeft: 10,\n    height: 60,\n    width: 250,\n },\n})\n","import { Platform } from 'react-native'\n\nconst generic = require('../assets/images/beer-127.png')\nexport default {\n  'point': 16,\n  'icon': 32,\n  getAvatar: ({Twitter}) => {\n    if (Platform.OS !== 'web') return generic\n    if (!Twitter || !Twitter.length) return generic\n    if (!Twitter[0].avatar) return generic\n    return Twitter[0].avatar\n  }\n}","export default {\n  AB: 'Alberta',\n  BC: 'British Columbia',\n  MB: 'Manitoba',\n  NB: 'New Brunswick',\n  NL: 'Newfoundland and Labrador',\n  NS: 'Nova Scotia',\n  NT: 'Northwest Territories',\n  NU: 'Nunavut',\n  ON: 'Ontario',\n  PE: 'Prince Edward Island',\n  PQ: 'Québec',\n  SK: 'Saskatchewan',\n  YT: 'Yukon',\n}"],"sourceRoot":""}